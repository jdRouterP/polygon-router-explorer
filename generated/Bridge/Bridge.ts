// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedWhitelist extends ethereum.Event {
  get params(): AddedWhitelist__Params {
    return new AddedWhitelist__Params(this);
  }
}

export class AddedWhitelist__Params {
  _event: AddedWhitelist;

  constructor(event: AddedWhitelist) {
    this._event = event;
  }

  get whitelistAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AdminWithdraw extends ethereum.Event {
  get params(): AdminWithdraw__Params {
    return new AdminWithdraw__Params(this);
  }
}

export class AdminWithdraw__Params {
  _event: AdminWithdraw;

  constructor(event: AdminWithdraw) {
    this._event = event;
  }

  get handler(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountOrTokenID(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get destinationChainID(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get resourceID(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get depositNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get widgetID(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FeeSetterAdded extends ethereum.Event {
  get params(): FeeSetterAdded__Params {
    return new FeeSetterAdded__Params(this);
  }
}

export class FeeSetterAdded__Params {
  _event: FeeSetterAdded;

  constructor(event: FeeSetterAdded) {
    this._event = event;
  }

  get feeSetter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeSetterRemoved extends ethereum.Event {
  get params(): FeeSetterRemoved__Params {
    return new FeeSetterRemoved__Params(this);
  }
}

export class FeeSetterRemoved__Params {
  _event: FeeSetterRemoved;

  constructor(event: FeeSetterRemoved) {
    this._event = event;
  }

  get feeSetter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProposalEvent extends ethereum.Event {
  get params(): ProposalEvent__Params {
    return new ProposalEvent__Params(this);
  }
}

export class ProposalEvent__Params {
  _event: ProposalEvent;

  constructor(event: ProposalEvent) {
    this._event = event;
  }

  get originChainID(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get depositNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get dataHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class ProposalVote extends ethereum.Event {
  get params(): ProposalVote__Params {
    return new ProposalVote__Params(this);
  }
}

export class ProposalVote__Params {
  _event: ProposalVote;

  constructor(event: ProposalVote) {
    this._event = event;
  }

  get originChainID(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get depositNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get dataHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class RelayerAdded extends ethereum.Event {
  get params(): RelayerAdded__Params {
    return new RelayerAdded__Params(this);
  }
}

export class RelayerAdded__Params {
  _event: RelayerAdded;

  constructor(event: RelayerAdded) {
    this._event = event;
  }

  get relayer(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RelayerRemoved extends ethereum.Event {
  get params(): RelayerRemoved__Params {
    return new RelayerRemoved__Params(this);
  }
}

export class RelayerRemoved__Params {
  _event: RelayerRemoved;

  constructor(event: RelayerRemoved) {
    this._event = event;
  }

  get relayer(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RemovedWhitelist extends ethereum.Event {
  get params(): RemovedWhitelist__Params {
    return new RemovedWhitelist__Params(this);
  }
}

export class RemovedWhitelist__Params {
  _event: RemovedWhitelist;

  constructor(event: RemovedWhitelist) {
    this._event = event;
  }

  get whitelistAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SequencerEvent extends ethereum.Event {
  get params(): SequencerEvent__Params {
    return new SequencerEvent__Params(this);
  }
}

export class SequencerEvent__Params {
  _event: SequencerEvent;

  constructor(event: SequencerEvent) {
    this._event = event;
  }

  get originChainID(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get depositNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get dataHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class Settlement extends ethereum.Event {
  get params(): Settlement__Params {
    return new Settlement__Params(this);
  }
}

export class Settlement__Params {
  _event: Settlement;

  constructor(event: Settlement) {
    this._event = event;
  }

  get originChainID(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get depositNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get settlementToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get settlementAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Stake extends ethereum.Event {
  get params(): Stake__Params {
    return new Stake__Params(this);
  }
}

export class Stake__Params {
  _event: Stake;

  constructor(event: Stake) {
    this._event = event;
  }

  get staker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get pool(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unstake extends ethereum.Event {
  get params(): Unstake__Params {
    return new Unstake__Params(this);
  }
}

export class Unstake__Params {
  _event: Unstake;

  constructor(event: Unstake) {
    this._event = event;
  }

  get unstaker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get pool(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class UnsupportedChain extends ethereum.Event {
  get params(): UnsupportedChain__Params {
    return new UnsupportedChain__Params(this);
  }
}

export class UnsupportedChain__Params {
  _event: UnsupportedChain;

  constructor(event: UnsupportedChain) {
    this._event = event;
  }

  get destinationChainID(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get isUnsupported(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WhitelistingSetting extends ethereum.Event {
  get params(): WhitelistingSetting__Params {
    return new WhitelistingSetting__Params(this);
  }
}

export class WhitelistingSetting__Params {
  _event: WhitelistingSetting;

  constructor(event: WhitelistingSetting) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class expiryChanged extends ethereum.Event {
  get params(): expiryChanged__Params {
    return new expiryChanged__Params(this);
  }
}

export class expiryChanged__Params {
  _event: expiryChanged;

  constructor(event: expiryChanged) {
    this._event = event;
  }

  get expiry(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class quorumChanged extends ethereum.Event {
  get params(): quorumChanged__Params {
    return new quorumChanged__Params(this);
  }
}

export class quorumChanged__Params {
  _event: quorumChanged;

  constructor(event: quorumChanged) {
    this._event = event;
  }

  get quorum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Bridge__getBridgeFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Bridge__getProposalResultStatusStruct extends ethereum.Tuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get startBlock(): BigInt {
    return this[1].toBigInt();
  }

  get endBlock(): BigInt {
    return this[2].toBigInt();
  }

  get quorum(): BigInt {
    return this[3].toBigInt();
  }

  get maxVotes(): BigInt {
    return this[4].toBigInt();
  }

  get resultOption(): i32 {
    return this[5].toI32();
  }
}

export class Bridge extends ethereum.SmartContract {
  static bind(address: Address): Bridge {
    return new Bridge("Bridge", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  EMERGENCY_ROLE(): Bytes {
    let result = super.call("EMERGENCY_ROLE", "EMERGENCY_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_EMERGENCY_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "EMERGENCY_ROLE",
      "EMERGENCY_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FEE_SETTER_ROLE(): Bytes {
    let result = super.call(
      "FEE_SETTER_ROLE",
      "FEE_SETTER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_FEE_SETTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "FEE_SETTER_ROLE",
      "FEE_SETTER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GetProposalHash(chainID: i32, depositNonce: BigInt, dataHash: Bytes): Bytes {
    let result = super.call(
      "GetProposalHash",
      "GetProposalHash(uint8,uint64,bytes32):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(chainID)),
        ethereum.Value.fromUnsignedBigInt(depositNonce),
        ethereum.Value.fromFixedBytes(dataHash)
      ]
    );

    return result[0].toBytes();
  }

  try_GetProposalHash(
    chainID: i32,
    depositNonce: BigInt,
    dataHash: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GetProposalHash",
      "GetProposalHash(uint8,uint64,bytes32):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(chainID)),
        ethereum.Value.fromUnsignedBigInt(depositNonce),
        ethereum.Value.fromFixedBytes(dataHash)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  HasVotedOnProposal(
    chainID: i32,
    depositNonce: BigInt,
    dataHash: Bytes
  ): boolean {
    let result = super.call(
      "HasVotedOnProposal",
      "HasVotedOnProposal(uint8,uint64,bytes32):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(chainID)),
        ethereum.Value.fromUnsignedBigInt(depositNonce),
        ethereum.Value.fromFixedBytes(dataHash)
      ]
    );

    return result[0].toBoolean();
  }

  try_HasVotedOnProposal(
    chainID: i32,
    depositNonce: BigInt,
    dataHash: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "HasVotedOnProposal",
      "HasVotedOnProposal(uint8,uint64,bytes32):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(chainID)),
        ethereum.Value.fromUnsignedBigInt(depositNonce),
        ethereum.Value.fromFixedBytes(dataHash)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  RELAYER_ROLE(): Bytes {
    let result = super.call("RELAYER_ROLE", "RELAYER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_RELAYER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("RELAYER_ROLE", "RELAYER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  RESOURCE_SETTER(): Bytes {
    let result = super.call(
      "RESOURCE_SETTER",
      "RESOURCE_SETTER():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_RESOURCE_SETTER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "RESOURCE_SETTER",
      "RESOURCE_SETTER():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  _quorum(): BigInt {
    let result = super.call("_quorum", "_quorum():(uint64)", []);

    return result[0].toBigInt();
  }

  try__quorum(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_quorum", "_quorum():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _voter(): Address {
    let result = super.call("_voter", "_voter():(address)", []);

    return result[0].toAddress();
  }

  try__voter(): ethereum.CallResult<Address> {
    let result = super.tryCall("_voter", "_voter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fetch_chainID(): i32 {
    let result = super.call("fetch_chainID", "fetch_chainID():(uint8)", []);

    return result[0].toI32();
  }

  try_fetch_chainID(): ethereum.CallResult<i32> {
    let result = super.tryCall("fetch_chainID", "fetch_chainID():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  fetch_depositCounts(_id: i32): BigInt {
    let result = super.call(
      "fetch_depositCounts",
      "fetch_depositCounts(uint8):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_id))]
    );

    return result[0].toBigInt();
  }

  try_fetch_depositCounts(_id: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fetch_depositCounts",
      "fetch_depositCounts(uint8):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_id))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fetch_expiry(): BigInt {
    let result = super.call("fetch_expiry", "fetch_expiry():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fetch_expiry(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fetch_expiry", "fetch_expiry():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fetch_proposals(_id: Bytes): BigInt {
    let result = super.call(
      "fetch_proposals",
      "fetch_proposals(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_id)]
    );

    return result[0].toBigInt();
  }

  try_fetch_proposals(_id: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fetch_proposals",
      "fetch_proposals(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fetch_resourceIDToHandlerAddress(_id: Bytes): Address {
    let result = super.call(
      "fetch_resourceIDToHandlerAddress",
      "fetch_resourceIDToHandlerAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_id)]
    );

    return result[0].toAddress();
  }

  try_fetch_resourceIDToHandlerAddress(
    _id: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fetch_resourceIDToHandlerAddress",
      "fetch_resourceIDToHandlerAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fetch_whitelist(_beneficiary: Address): boolean {
    let result = super.call(
      "fetch_whitelist",
      "fetch_whitelist(address):(bool)",
      [ethereum.Value.fromAddress(_beneficiary)]
    );

    return result[0].toBoolean();
  }

  try_fetch_whitelist(_beneficiary: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "fetch_whitelist",
      "fetch_whitelist(address):(bool)",
      [ethereum.Value.fromAddress(_beneficiary)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  fetch_whitelistEnabled(): boolean {
    let result = super.call(
      "fetch_whitelistEnabled",
      "fetch_whitelistEnabled():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_fetch_whitelistEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "fetch_whitelistEnabled",
      "fetch_whitelistEnabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  genericDeposit(_destChainID: i32, _resourceID: Bytes): BigInt {
    let result = super.call(
      "genericDeposit",
      "genericDeposit(uint8,bytes32):(uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_destChainID)),
        ethereum.Value.fromFixedBytes(_resourceID)
      ]
    );

    return result[0].toBigInt();
  }

  try_genericDeposit(
    _destChainID: i32,
    _resourceID: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "genericDeposit",
      "genericDeposit(uint8,bytes32):(uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_destChainID)),
        ethereum.Value.fromFixedBytes(_resourceID)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBridgeFee(
    resourceID: Bytes,
    destChainID: i32,
    feeTokenAddress: Address
  ): Bridge__getBridgeFeeResult {
    let result = super.call(
      "getBridgeFee",
      "getBridgeFee(bytes32,uint8,address):(uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(resourceID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(destChainID)),
        ethereum.Value.fromAddress(feeTokenAddress)
      ]
    );

    return new Bridge__getBridgeFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getBridgeFee(
    resourceID: Bytes,
    destChainID: i32,
    feeTokenAddress: Address
  ): ethereum.CallResult<Bridge__getBridgeFeeResult> {
    let result = super.tryCall(
      "getBridgeFee",
      "getBridgeFee(bytes32,uint8,address):(uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(resourceID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(destChainID)),
        ethereum.Value.fromAddress(feeTokenAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Bridge__getBridgeFeeResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  getNonceCheckpoint(srcChainId: i32): BigInt {
    let result = super.call(
      "getNonceCheckpoint",
      "getNonceCheckpoint(uint8):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(srcChainId))]
    );

    return result[0].toBigInt();
  }

  try_getNonceCheckpoint(srcChainId: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNonceCheckpoint",
      "getNonceCheckpoint(uint8):(uint64)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(srcChainId))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProposal(
    originChainID: i32,
    depositNonce: BigInt,
    resourceId: Bytes,
    dataHash: Bytes
  ): Bridge__getProposalResultStatusStruct {
    let result = super.call(
      "getProposal",
      "getProposal(uint8,uint64,bytes32,bytes32):((uint8,uint256,uint256,uint64,uint256,uint8))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(originChainID)),
        ethereum.Value.fromUnsignedBigInt(depositNonce),
        ethereum.Value.fromFixedBytes(resourceId),
        ethereum.Value.fromFixedBytes(dataHash)
      ]
    );

    return changetype<Bridge__getProposalResultStatusStruct>(
      result[0].toTuple()
    );
  }

  try_getProposal(
    originChainID: i32,
    depositNonce: BigInt,
    resourceId: Bytes,
    dataHash: Bytes
  ): ethereum.CallResult<Bridge__getProposalResultStatusStruct> {
    let result = super.tryCall(
      "getProposal",
      "getProposal(uint8,uint64,bytes32,bytes32):((uint8,uint256,uint256,uint64,uint256,uint8))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(originChainID)),
        ethereum.Value.fromUnsignedBigInt(depositNonce),
        ethereum.Value.fromFixedBytes(resourceId),
        ethereum.Value.fromFixedBytes(dataHash)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Bridge__getProposalResultStatusStruct>(value[0].toTuple())
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isNonceExecuted(srcChainId: i32, depositNonce: BigInt): boolean {
    let result = super.call(
      "isNonceExecuted",
      "isNonceExecuted(uint8,uint64):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(srcChainId)),
        ethereum.Value.fromUnsignedBigInt(depositNonce)
      ]
    );

    return result[0].toBoolean();
  }

  try_isNonceExecuted(
    srcChainId: i32,
    depositNonce: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isNonceExecuted",
      "isNonceExecuted(uint8,uint64):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(srcChainId)),
        ethereum.Value.fromUnsignedBigInt(depositNonce)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalRelayers(): BigInt {
    let result = super.call("totalRelayers", "totalRelayers():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalRelayers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalRelayers",
      "totalRelayers():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddToWhitelistCall extends ethereum.Call {
  get inputs(): AddToWhitelistCall__Inputs {
    return new AddToWhitelistCall__Inputs(this);
  }

  get outputs(): AddToWhitelistCall__Outputs {
    return new AddToWhitelistCall__Outputs(this);
  }
}

export class AddToWhitelistCall__Inputs {
  _call: AddToWhitelistCall;

  constructor(call: AddToWhitelistCall) {
    this._call = call;
  }

  get _beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddToWhitelistCall__Outputs {
  _call: AddToWhitelistCall;

  constructor(call: AddToWhitelistCall) {
    this._call = call;
  }
}

export class AdminChangeExpiryCall extends ethereum.Call {
  get inputs(): AdminChangeExpiryCall__Inputs {
    return new AdminChangeExpiryCall__Inputs(this);
  }

  get outputs(): AdminChangeExpiryCall__Outputs {
    return new AdminChangeExpiryCall__Outputs(this);
  }
}

export class AdminChangeExpiryCall__Inputs {
  _call: AdminChangeExpiryCall;

  constructor(call: AdminChangeExpiryCall) {
    this._call = call;
  }

  get newExpiry(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AdminChangeExpiryCall__Outputs {
  _call: AdminChangeExpiryCall;

  constructor(call: AdminChangeExpiryCall) {
    this._call = call;
  }
}

export class AdminChangeQuorumCall extends ethereum.Call {
  get inputs(): AdminChangeQuorumCall__Inputs {
    return new AdminChangeQuorumCall__Inputs(this);
  }

  get outputs(): AdminChangeQuorumCall__Outputs {
    return new AdminChangeQuorumCall__Outputs(this);
  }
}

export class AdminChangeQuorumCall__Inputs {
  _call: AdminChangeQuorumCall;

  constructor(call: AdminChangeQuorumCall) {
    this._call = call;
  }

  get newQuorum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AdminChangeQuorumCall__Outputs {
  _call: AdminChangeQuorumCall;

  constructor(call: AdminChangeQuorumCall) {
    this._call = call;
  }
}

export class AdminSetBurnableCall extends ethereum.Call {
  get inputs(): AdminSetBurnableCall__Inputs {
    return new AdminSetBurnableCall__Inputs(this);
  }

  get outputs(): AdminSetBurnableCall__Outputs {
    return new AdminSetBurnableCall__Outputs(this);
  }
}

export class AdminSetBurnableCall__Inputs {
  _call: AdminSetBurnableCall;

  constructor(call: AdminSetBurnableCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get status(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class AdminSetBurnableCall__Outputs {
  _call: AdminSetBurnableCall;

  constructor(call: AdminSetBurnableCall) {
    this._call = call;
  }
}

export class AdminSetFeeStatusCall extends ethereum.Call {
  get inputs(): AdminSetFeeStatusCall__Inputs {
    return new AdminSetFeeStatusCall__Inputs(this);
  }

  get outputs(): AdminSetFeeStatusCall__Outputs {
    return new AdminSetFeeStatusCall__Outputs(this);
  }
}

export class AdminSetFeeStatusCall__Inputs {
  _call: AdminSetFeeStatusCall;

  constructor(call: AdminSetFeeStatusCall) {
    this._call = call;
  }

  get resourceID(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class AdminSetFeeStatusCall__Outputs {
  _call: AdminSetFeeStatusCall;

  constructor(call: AdminSetFeeStatusCall) {
    this._call = call;
  }
}

export class AdminSetGenericResourceCall extends ethereum.Call {
  get inputs(): AdminSetGenericResourceCall__Inputs {
    return new AdminSetGenericResourceCall__Inputs(this);
  }

  get outputs(): AdminSetGenericResourceCall__Outputs {
    return new AdminSetGenericResourceCall__Outputs(this);
  }
}

export class AdminSetGenericResourceCall__Inputs {
  _call: AdminSetGenericResourceCall;

  constructor(call: AdminSetGenericResourceCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class AdminSetGenericResourceCall__Outputs {
  _call: AdminSetGenericResourceCall;

  constructor(call: AdminSetGenericResourceCall) {
    this._call = call;
  }
}

export class AdminSetLiquidityPoolCall extends ethereum.Call {
  get inputs(): AdminSetLiquidityPoolCall__Inputs {
    return new AdminSetLiquidityPoolCall__Inputs(this);
  }

  get outputs(): AdminSetLiquidityPoolCall__Outputs {
    return new AdminSetLiquidityPoolCall__Outputs(this);
  }
}

export class AdminSetLiquidityPoolCall__Inputs {
  _call: AdminSetLiquidityPoolCall;

  constructor(call: AdminSetLiquidityPoolCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get lpAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AdminSetLiquidityPoolCall__Outputs {
  _call: AdminSetLiquidityPoolCall;

  constructor(call: AdminSetLiquidityPoolCall) {
    this._call = call;
  }
}

export class AdminSetLiquidityPoolOwnerCall extends ethereum.Call {
  get inputs(): AdminSetLiquidityPoolOwnerCall__Inputs {
    return new AdminSetLiquidityPoolOwnerCall__Inputs(this);
  }

  get outputs(): AdminSetLiquidityPoolOwnerCall__Outputs {
    return new AdminSetLiquidityPoolOwnerCall__Outputs(this);
  }
}

export class AdminSetLiquidityPoolOwnerCall__Inputs {
  _call: AdminSetLiquidityPoolOwnerCall;

  constructor(call: AdminSetLiquidityPoolOwnerCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get oldOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get lpAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class AdminSetLiquidityPoolOwnerCall__Outputs {
  _call: AdminSetLiquidityPoolOwnerCall;

  constructor(call: AdminSetLiquidityPoolOwnerCall) {
    this._call = call;
  }
}

export class AdminSetNonceCheckpointCall extends ethereum.Call {
  get inputs(): AdminSetNonceCheckpointCall__Inputs {
    return new AdminSetNonceCheckpointCall__Inputs(this);
  }

  get outputs(): AdminSetNonceCheckpointCall__Outputs {
    return new AdminSetNonceCheckpointCall__Outputs(this);
  }
}

export class AdminSetNonceCheckpointCall__Inputs {
  _call: AdminSetNonceCheckpointCall;

  constructor(call: AdminSetNonceCheckpointCall) {
    this._call = call;
  }

  get srcChainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get nonceCheckpoint(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AdminSetNonceCheckpointCall__Outputs {
  _call: AdminSetNonceCheckpointCall;

  constructor(call: AdminSetNonceCheckpointCall) {
    this._call = call;
  }
}

export class AdminSetOneSplitAddressCall extends ethereum.Call {
  get inputs(): AdminSetOneSplitAddressCall__Inputs {
    return new AdminSetOneSplitAddressCall__Inputs(this);
  }

  get outputs(): AdminSetOneSplitAddressCall__Outputs {
    return new AdminSetOneSplitAddressCall__Outputs(this);
  }
}

export class AdminSetOneSplitAddressCall__Inputs {
  _call: AdminSetOneSplitAddressCall;

  constructor(call: AdminSetOneSplitAddressCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AdminSetOneSplitAddressCall__Outputs {
  _call: AdminSetOneSplitAddressCall;

  constructor(call: AdminSetOneSplitAddressCall) {
    this._call = call;
  }
}

export class AdminSetResourceCall extends ethereum.Call {
  get inputs(): AdminSetResourceCall__Inputs {
    return new AdminSetResourceCall__Inputs(this);
  }

  get outputs(): AdminSetResourceCall__Outputs {
    return new AdminSetResourceCall__Outputs(this);
  }
}

export class AdminSetResourceCall__Inputs {
  _call: AdminSetResourceCall;

  constructor(call: AdminSetResourceCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AdminSetResourceCall__Outputs {
  _call: AdminSetResourceCall;

  constructor(call: AdminSetResourceCall) {
    this._call = call;
  }
}

export class AdminSetSequencerResourceCall extends ethereum.Call {
  get inputs(): AdminSetSequencerResourceCall__Inputs {
    return new AdminSetSequencerResourceCall__Inputs(this);
  }

  get outputs(): AdminSetSequencerResourceCall__Outputs {
    return new AdminSetSequencerResourceCall__Outputs(this);
  }
}

export class AdminSetSequencerResourceCall__Inputs {
  _call: AdminSetSequencerResourceCall;

  constructor(call: AdminSetSequencerResourceCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class AdminSetSequencerResourceCall__Outputs {
  _call: AdminSetSequencerResourceCall;

  constructor(call: AdminSetSequencerResourceCall) {
    this._call = call;
  }
}

export class AdminWithdrawCall extends ethereum.Call {
  get inputs(): AdminWithdrawCall__Inputs {
    return new AdminWithdrawCall__Inputs(this);
  }

  get outputs(): AdminWithdrawCall__Outputs {
    return new AdminWithdrawCall__Outputs(this);
  }
}

export class AdminWithdrawCall__Inputs {
  _call: AdminWithdrawCall;

  constructor(call: AdminWithdrawCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AdminWithdrawCall__Outputs {
  _call: AdminWithdrawCall;

  constructor(call: AdminWithdrawCall) {
    this._call = call;
  }
}

export class AdminWithdrawFeesCall extends ethereum.Call {
  get inputs(): AdminWithdrawFeesCall__Inputs {
    return new AdminWithdrawFeesCall__Inputs(this);
  }

  get outputs(): AdminWithdrawFeesCall__Outputs {
    return new AdminWithdrawFeesCall__Outputs(this);
  }
}

export class AdminWithdrawFeesCall__Inputs {
  _call: AdminWithdrawFeesCall;

  constructor(call: AdminWithdrawFeesCall) {
    this._call = call;
  }

  get handlerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AdminWithdrawFeesCall__Outputs {
  _call: AdminWithdrawFeesCall;

  constructor(call: AdminWithdrawFeesCall) {
    this._call = call;
  }
}

export class CancelProposalCall extends ethereum.Call {
  get inputs(): CancelProposalCall__Inputs {
    return new CancelProposalCall__Inputs(this);
  }

  get outputs(): CancelProposalCall__Outputs {
    return new CancelProposalCall__Outputs(this);
  }
}

export class CancelProposalCall__Inputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }

  get chainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get depositNonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get dataHash(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class CancelProposalCall__Outputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get destinationChainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get flags(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get path(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get dataTx(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }

  get feeTokenAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositETHCall extends ethereum.Call {
  get inputs(): DepositETHCall__Inputs {
    return new DepositETHCall__Inputs(this);
  }

  get outputs(): DepositETHCall__Outputs {
    return new DepositETHCall__Outputs(this);
  }
}

export class DepositETHCall__Inputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }

  get destinationChainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get flags(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get path(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get dataTx(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }

  get feeTokenAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class DepositETHCall__Outputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }
}

export class ExecuteProposalCall extends ethereum.Call {
  get inputs(): ExecuteProposalCall__Inputs {
    return new ExecuteProposalCall__Inputs(this);
  }

  get outputs(): ExecuteProposalCall__Outputs {
    return new ExecuteProposalCall__Outputs(this);
  }
}

export class ExecuteProposalCall__Inputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }

  get chainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get depositNonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get flags(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get path(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }

  get dataTx(): Array<Bytes> {
    return this._call.inputValues[6].value.toBytesArray();
  }
}

export class ExecuteProposalCall__Outputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }
}

export class GenericDepositCall extends ethereum.Call {
  get inputs(): GenericDepositCall__Inputs {
    return new GenericDepositCall__Inputs(this);
  }

  get outputs(): GenericDepositCall__Outputs {
    return new GenericDepositCall__Outputs(this);
  }
}

export class GenericDepositCall__Inputs {
  _call: GenericDepositCall;

  constructor(call: GenericDepositCall) {
    this._call = call;
  }

  get _destChainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _resourceID(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class GenericDepositCall__Outputs {
  _call: GenericDepositCall;

  constructor(call: GenericDepositCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get chainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get quorum(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get voter(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveFromWhitelistCall extends ethereum.Call {
  get inputs(): RemoveFromWhitelistCall__Inputs {
    return new RemoveFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveFromWhitelistCall__Outputs {
    return new RemoveFromWhitelistCall__Outputs(this);
  }
}

export class RemoveFromWhitelistCall__Inputs {
  _call: RemoveFromWhitelistCall;

  constructor(call: RemoveFromWhitelistCall) {
    this._call = call;
  }

  get _beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveFromWhitelistCall__Outputs {
  _call: RemoveFromWhitelistCall;

  constructor(call: RemoveFromWhitelistCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetUnsupportedChainCall extends ethereum.Call {
  get inputs(): SetUnsupportedChainCall__Inputs {
    return new SetUnsupportedChainCall__Inputs(this);
  }

  get outputs(): SetUnsupportedChainCall__Outputs {
    return new SetUnsupportedChainCall__Outputs(this);
  }
}

export class SetUnsupportedChainCall__Inputs {
  _call: SetUnsupportedChainCall;

  constructor(call: SetUnsupportedChainCall) {
    this._call = call;
  }

  get destChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get isUnsupported(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetUnsupportedChainCall__Outputs {
  _call: SetUnsupportedChainCall;

  constructor(call: SetUnsupportedChainCall) {
    this._call = call;
  }
}

export class SetWhitelistingCall extends ethereum.Call {
  get inputs(): SetWhitelistingCall__Inputs {
    return new SetWhitelistingCall__Inputs(this);
  }

  get outputs(): SetWhitelistingCall__Outputs {
    return new SetWhitelistingCall__Outputs(this);
  }
}

export class SetWhitelistingCall__Inputs {
  _call: SetWhitelistingCall;

  constructor(call: SetWhitelistingCall) {
    this._call = call;
  }

  get value(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetWhitelistingCall__Outputs {
  _call: SetWhitelistingCall;

  constructor(call: SetWhitelistingCall) {
    this._call = call;
  }
}

export class StakeCall extends ethereum.Call {
  get inputs(): StakeCall__Inputs {
    return new StakeCall__Inputs(this);
  }

  get outputs(): StakeCall__Outputs {
    return new StakeCall__Outputs(this);
  }
}

export class StakeCall__Inputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get handler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class StakeCall__Outputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }
}

export class StakeETHCall extends ethereum.Call {
  get inputs(): StakeETHCall__Inputs {
    return new StakeETHCall__Inputs(this);
  }

  get outputs(): StakeETHCall__Outputs {
    return new StakeETHCall__Outputs(this);
  }
}

export class StakeETHCall__Inputs {
  _call: StakeETHCall;

  constructor(call: StakeETHCall) {
    this._call = call;
  }

  get handler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class StakeETHCall__Outputs {
  _call: StakeETHCall;

  constructor(call: StakeETHCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnstakeCall extends ethereum.Call {
  get inputs(): UnstakeCall__Inputs {
    return new UnstakeCall__Inputs(this);
  }

  get outputs(): UnstakeCall__Outputs {
    return new UnstakeCall__Outputs(this);
  }
}

export class UnstakeCall__Inputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }

  get handler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UnstakeCall__Outputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }
}

export class UnstakeETHCall extends ethereum.Call {
  get inputs(): UnstakeETHCall__Inputs {
    return new UnstakeETHCall__Inputs(this);
  }

  get outputs(): UnstakeETHCall__Outputs {
    return new UnstakeETHCall__Outputs(this);
  }
}

export class UnstakeETHCall__Inputs {
  _call: UnstakeETHCall;

  constructor(call: UnstakeETHCall) {
    this._call = call;
  }

  get handler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnstakeETHCall__Outputs {
  _call: UnstakeETHCall;

  constructor(call: UnstakeETHCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class VoteProposalCall extends ethereum.Call {
  get inputs(): VoteProposalCall__Inputs {
    return new VoteProposalCall__Inputs(this);
  }

  get outputs(): VoteProposalCall__Outputs {
    return new VoteProposalCall__Outputs(this);
  }
}

export class VoteProposalCall__Inputs {
  _call: VoteProposalCall;

  constructor(call: VoteProposalCall) {
    this._call = call;
  }

  get chainID(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get depositNonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get resourceID(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get dataHash(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class VoteProposalCall__Outputs {
  _call: VoteProposalCall;

  constructor(call: VoteProposalCall) {
    this._call = call;
  }
}
